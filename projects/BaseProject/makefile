#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.138                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC =  -I/usr/include/opencv
CFLAGS =  -Wall -fexceptions
RESINC = 
LIBDIR = 
LIB =  -lGL -lglut -ltinyxml
LDFLAGS =  `pkg-config --libs glew` `pkg-config --libs opencv`

INC_DEBUG =  $(INC) -I/usr/include/opencv
CFLAGS_DEBUG =  $(CFLAGS) -g
RESINC_DEBUG =  $(RESINC)
RCFLAGS_DEBUG =  $(RCFLAGS)
LIBDIR_DEBUG =  $(LIBDIR)
LIB_DEBUG = $(LIB) -lGL -lglut -ltinyxml
LDFLAGS_DEBUG =  $(LDFLAGS) `pkg-config --libs glew` `pkg-config --libs opencv`
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG = 
OUT_DEBUG = bin/Debug/threads

INC_RELEASE =  $(INC) -I/usr/include/opencv
CFLAGS_RELEASE =  $(CFLAGS) -O2
RESINC_RELEASE =  $(RESINC)
RCFLAGS_RELEASE =  $(RCFLAGS)
LIBDIR_RELEASE =  $(LIBDIR)
LIB_RELEASE = $(LIB) -lGL -lglut -ltinyxml
LDFLAGS_RELEASE =  $(LDFLAGS) -s `pkg-config --libs glew` `pkg-config --libs opencv`
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = bin/Release/threads

OBJ_DEBUG = $(OBJDIR_DEBUG)/Sphere.o $(OBJDIR_DEBUG)/utilities.o $(OBJDIR_DEBUG)/main.o $(OBJDIR_DEBUG)/connectivity.o $(OBJDIR_DEBUG)/Cube.o $(OBJDIR_DEBUG)/Shader.o $(OBJDIR_DEBUG)/Scene.o $(OBJDIR_DEBUG)/Reader.o $(OBJDIR_DEBUG)/Object.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/Sphere.o $(OBJDIR_RELEASE)/utilities.o $(OBJDIR_RELEASE)/main.o $(OBJDIR_RELEASE)/connectivity.o $(OBJDIR_RELEASE)/Cube.o $(OBJDIR_RELEASE)/Shader.o $(OBJDIR_RELEASE)/Scene.o $(OBJDIR_RELEASE)/Reader.o $(OBJDIR_RELEASE)/Object.o

all: debug release

clean: clean_debug clean_release

before_debug: 
	test -d bin/Debug || mkdir -p bin/Debug
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG)  $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/Sphere.o: Sphere.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Sphere.cpp -o $(OBJDIR_DEBUG)/Sphere.o

$(OBJDIR_DEBUG)/utilities.o: utilities.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c utilities.cpp -o $(OBJDIR_DEBUG)/utilities.o

$(OBJDIR_DEBUG)/main.o: main.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c main.cpp -o $(OBJDIR_DEBUG)/main.o

$(OBJDIR_DEBUG)/connectivity.o: connectivity.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c connectivity.cpp -o $(OBJDIR_DEBUG)/connectivity.o

$(OBJDIR_DEBUG)/Cube.o: Cube.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Cube.cpp -o $(OBJDIR_DEBUG)/Cube.o

$(OBJDIR_DEBUG)/Shader.o: Shader.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Shader.cpp -o $(OBJDIR_DEBUG)/Shader.o

$(OBJDIR_DEBUG)/Scene.o: Scene.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Scene.cpp -o $(OBJDIR_DEBUG)/Scene.o

$(OBJDIR_DEBUG)/Reader.o: Reader.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Reader.cpp -o $(OBJDIR_DEBUG)/Reader.o

$(OBJDIR_DEBUG)/Object.o: Object.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Object.cpp -o $(OBJDIR_DEBUG)/Object.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/Debug
	rm -rf $(OBJDIR_DEBUG)

before_release: 
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/Sphere.o: Sphere.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Sphere.cpp -o $(OBJDIR_RELEASE)/Sphere.o

$(OBJDIR_RELEASE)/utilities.o: utilities.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c utilities.cpp -o $(OBJDIR_RELEASE)/utilities.o

$(OBJDIR_RELEASE)/main.o: main.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c main.cpp -o $(OBJDIR_RELEASE)/main.o

$(OBJDIR_RELEASE)/connectivity.o: connectivity.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c connectivity.cpp -o $(OBJDIR_RELEASE)/connectivity.o

$(OBJDIR_RELEASE)/Cube.o: Cube.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Cube.cpp -o $(OBJDIR_RELEASE)/Cube.o

$(OBJDIR_RELEASE)/Shader.o: Shader.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Shader.cpp -o $(OBJDIR_RELEASE)/Shader.o

$(OBJDIR_RELEASE)/Scene.o: Scene.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Scene.cpp -o $(OBJDIR_RELEASE)/Scene.o

$(OBJDIR_RELEASE)/Reader.o: Reader.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Reader.cpp -o $(OBJDIR_RELEASE)/Reader.o

$(OBJDIR_RELEASE)/Object.o: Object.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Object.cpp -o $(OBJDIR_RELEASE)/Object.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

